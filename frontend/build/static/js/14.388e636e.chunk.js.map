{"version":3,"sources":["components/login/login.js","ui/input.js","helpers/utils.js","ui/button.js"],"names":["Login","props","inputChangedHandler","event","controlName","updatedControls","updateObject","state","controls","value","target","valid","checkValidity","validation","touched","setState","renderRedirectToRoot","isUserAuthenticated","to","submitHandler","values","username","password","preventDefault","loginUser","history","switchAuthModeHandler","prevState","isSignup","Fragment","this","className","id","params","particles","number","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","alt","login_error","isOpen","onValidSubmit","name","placeholder","required","htmlFor","Component","connect","Auth","user","loading","Input","inputElement","elementType","elementClassName","elementConfig","onChange","changed","filterLabel","options","map","option","optionKey","label","labelClassName","oldObject","updatedProperties","rules","isValid","trim","minLength","length","maxLength","isEmail","test","isNumeric"],"mappings":"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","file":"static/js/14.388e636e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { updateObject, checkValidity } from \"../../helpers/utils\";\nimport Input from \"../../ui/input\";\nimport Button from \"../../ui/button\";\nimport \"../../assets/scss/login.scss\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions\";\nimport { Alert } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { isUserAuthenticated } from \"../../helpers/authUtils\";\nimport { Redirect } from \"react-router-dom\";\nimport Particles from \"react-tsparticles\";\n\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n  inputChangedHandler = (event: any, controlName: any) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true,\n      }),\n    });\n    this.setState({ controls: updatedControls });\n  };\n  /**\n   * Redirect to root\n   */\n  renderRedirectToRoot = () => {\n    const isAuthTokenValid = isUserAuthenticated();\n    if (isAuthTokenValid) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  submitHandler = (event, values) => {\n    if (values.username && values.password) {\n      event.preventDefault();\n      this.props.loginUser(\n        values.username,\n        values.password,\n        this.props.history\n      );\n    }\n    //this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\n  };\n  switchAuthModeHandler = () => {\n    this.setState((prevState: any) => {\n      return { isSignup: !prevState.isSignup };\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderRedirectToRoot()}\n        <section className=\"position-relative\">\n          <Particles\n            id=\"particles-js\"\n            params={{\n              particles: {\n                number: {\n                  value: 160,\n                  density: {\n                    enable: true,\n                    value_area: 800,\n                  },\n                },\n                color: {\n                  value: \"#1360ef\",\n                },\n                shape: {\n                  type: \"circle\",\n                  stroke: {\n                    width: 0,\n                    color: \"#f94f15\",\n                  },\n                  polygon: {\n                    nb_sides: 5,\n                  },\n                  image: {\n                    src: \"img/github.svg\",\n                    width: 100,\n                    height: 100,\n                  },\n                },\n                opacity: {\n                  value: 1,\n                  random: true,\n                  anim: {\n                    enable: true,\n                    speed: 1,\n                    opacity_min: 0,\n                    sync: false,\n                  },\n                },\n                size: {\n                  value: 3,\n                  random: true,\n                  anim: {\n                    enable: false,\n                    speed: 4,\n                    size_min: 0.3,\n                    sync: false,\n                  },\n                },\n                line_linked: {\n                  enable: false,\n                  distance: 150,\n                  color: \"#ffffff\",\n                  opacity: 0.4,\n                  width: 1,\n                },\n                move: {\n                  enable: true,\n                  speed: 1,\n                  direction: \"none\",\n                  random: true,\n                  straight: false,\n                  out_mode: \"out\",\n                  bounce: false,\n                  attract: {\n                    enable: false,\n                    rotateX: 600,\n                    rotateY: 600,\n                  },\n                },\n              },\n              interactivity: {\n                detect_on: \"canvas\",\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"bubble\",\n                  },\n                  onclick: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                  resize: true,\n                },\n                modes: {\n                  grab: {\n                    distance: 400,\n                    line_linked: {\n                      opacity: 1,\n                    },\n                  },\n                  bubble: {\n                    distance: 250,\n                    size: 0,\n                    duration: 2,\n                    opacity: 0,\n                    speed: 3,\n                  },\n                  repulse: {\n                    distance: 400,\n                    duration: 0.4,\n                  },\n                  push: {\n                    particles_nb: 4,\n                  },\n                  remove: {\n                    particles_nb: 2,\n                  },\n                },\n              },\n              retina_detect: true,\n            }}\n          />\n          <div className=\"container\">\n            <div className=\"row  text-center\">\n              <div className=\"col\">\n                <h1>Sign In</h1>\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"page-content\">\n          <section>\n            <div className=\"container\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-lg-7 col-12\">\n                  <img\n                    className=\"img-fluid\"\n                    src=\"/assets/images/login.png\"\n                    alt=\"\"\n                  />\n                </div>\n                <div className=\"col-lg-5 col-12 mt-5 mt-lg-0\">\n                  <div>\n                    <h2 className=\"mb-3\">Sign In</h2>\n                    {this.props.login_error && (\n                      <Alert\n                        color=\"danger\"\n                        isOpen={this.props.login_error ? true : false}\n                      >\n                        <div>Invalid Username/Password</div>\n                      </Alert>\n                    )}\n                    <AvForm onValidSubmit={this.submitHandler}>\n                      <div className=\"messages\"></div>\n                      <div className=\"form-group\">\n                        <AvInput\n                          type=\"text\"\n                          name=\"username\"\n                          className=\"form-control\"\n                          placeholder=\"Email/Mobile\"\n                          value={this.state.username}\n                          required\n                        />\n                        <div className=\"help-block with-errors\"></div>\n                      </div>\n                      <div className=\"form-group\">\n                        <AvInput\n                          type=\"password\"\n                          name=\"password\"\n                          className=\"form-control\"\n                          placeholder=\"Password\"\n                          value={this.state.password}\n                          required\n                        />\n                        <div className=\"help-block with-errors\"></div>\n                      </div>\n                      <div className=\"form-group mt-4 mb-5\">\n                        <div className=\"remember-checkbox d-flex align-items-center justify-content-between\">\n                          <div className=\"form-check mb-0\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              value=\"\"\n                              id=\"flexCheckDefault\"\n                            />\n                            <label\n                              className=\"form-check-label mb-0\"\n                              htmlFor=\"flexCheckDefault\"\n                            >\n                              Remember Me\n                            </label>\n                          </div>\n                          <NavLink to=\"/reset-password\">\n                            <b>Forgot Password?</b>{\" \"}\n                          </NavLink>\n                        </div>\n                      </div>\n                      <input\n                        type=\"submit\"\n                        value=\"Login Now\"\n                        className=\"btn btn-primary btn-block\"\n                      />\n                    </AvForm>\n                    <div className=\"d-flex align-items-center text-center justify-content-center mt-4\">\n                      <span className=\"text-muted me-1\">\n                        Don't have an account?\n                      </span>\n\n                      <NavLink to=\"/signup\">\n                        <b>Sign Up</b>{\" \"}\n                      </NavLink>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { user, loading, login_error } = state.Auth;\n  return { user, loading, login_error };\n};\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\n\nconst Input = (props) => {\n    let inputElement = null;\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={props.elementClassName}\n                    value={props.value}\n                    onChange={props.changed}>\n                    <option value={false}>{props.elementConfig.filterLabel}</option>\n                    {props.elementConfig.options.map((option) => (\n                        <option key={option.id} value={option.id}>\n                            {option[props.elementConfig.optionKey]}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={props.className}>\n            {props.label && <label className={props.labelClassName}>{props.label}</label>}\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default Input;","\nexport const updateObject = (oldObject: any, updatedProperties: any) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value:any, rules:any) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}\n","import React from 'react';\n\nconst button = (props:any) => (\n    <button type=\"submit\"\n        disabled={props.disabled}\n        className={props.className}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;"],"sourceRoot":""}