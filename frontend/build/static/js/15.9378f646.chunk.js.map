{"version":3,"sources":["components/signup/signup.js","ui/input.js","helpers/utils.js","ui/button.js"],"names":["Register","props","inputChangedHandler","controlName","event","userEmail","user","email","userMobile","mobile","setState","target","value","mobileExist","postCall","BASE_URL","then","r","invalidMobile","catch","err","response","status","emailExist","er","submitHandler","values","preventDefault","otp","form_data","state","formValues","registerUser","history","sendOTP","switchAuthModeHandler","prevState","isSignup","first_name","password","data","showOtp","Fragment","className","id","params","particles","number","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","this","registerError","isOpen","onValidSubmit","model","name","placeholder","autoComplete","onChange","bind","validate","required","pattern","length","minLength","e","to","Component","connect","Auth","loading","Input","inputElement","elementType","elementClassName","elementConfig","changed","filterLabel","options","map","option","optionKey","label","labelClassName","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","trim","maxLength","isEmail","test","isNumeric"],"mappings":"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","file":"static/js/15.9378f646.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { updateObject, checkValidity } from \"../../helpers/utils\";\nimport Input from \"../../ui/input\";\nimport Button from \"../../ui/button\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../../assets/scss/login.scss\";\nimport { registerUser } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport { Alert, FormFeedback } from \"reactstrap\";\nimport { postCall } from \"../../helpers/axiosUtils\";\nimport { BASE_URL } from \"../../helpers/constants\";\nimport Particles from \"react-tsparticles\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        first_name: \"\",\n        email: \"\",\n        mobile: \"\",\n        password: \"\",\n        otp: \"\",\n      },\n      emailExist: false,\n    };\n  }\n  //   inputChangedHandler = (controlName, event) => {\n  //     if (controlName === \"mobile\") {\n  //       postCall(BASE_URL + `api/common/check-mobile-exist/`, {\n  //         email: event.target.value,\n  //       })\n  //         .then((r) => {\n  //           this.setState({ mobileExist: false });\n  //         })\n  //         .catch((er) => {\n  //           this.setState({ mobileExist: true });\n  //         });\n  //     } else {\n  //       postCall(BASE_URL + `api/common/check-email-exist/`, {\n  //         email: event.target.value,\n  //       })\n  //         .then((r) => {\n  //           this.setState({ emailExist: false });\n  //         })\n  //         .catch((er) => {\n  //           this.setState({ emailExist: true });\n  //         });\n  //     }\n  //   };\n\n  inputChangedHandler = (controlName, event) => {\n    const userEmail = this.props.user ? this.props.user.email : \"\";\n    const userMobile = this.props.user ? this.props.user.mobile : \"\";\n\n    if (controlName === \"mobile\") {\n      this.setState({ mobile: event.target.value });\n\n      if (userMobile == event.target.value) {\n        this.setState({ mobileExist: false });\n        return;\n      }\n\n      postCall(BASE_URL + `api/common/check-mobile-exist/`, {\n        email: event.target.value,\n      })\n        .then((r) => {\n          this.setState({ mobileExist: false });\n          this.setState({ invalidMobile: false });\n        })\n        .catch((err) => {\n          if (err.response.status == 400) {\n            this.setState({ mobileExist: true });\n            this.setState({ invalidMobile: false });\n          }\n          if (err.response.status == 500) {\n            this.setState({ invalidMobile: true });\n          }\n        });\n    } else {\n      if (userEmail == event.target.value) {\n        this.setState({ emailExist: false });\n        return;\n      }\n\n      postCall(BASE_URL + `api/common/check-email-exist/`, {\n        email: event.target.value,\n      })\n        .then((r) => {\n          this.setState({ emailExist: false });\n        })\n        .catch((er) => {\n          this.setState({ emailExist: true });\n        });\n    }\n  };\n\n  sendOTP(data) {\n    postCall(BASE_URL + `api/common/`, data)\n      .then((r) => {\n        this.setState({ showOtp: true });\n      })\n      .catch((er) => {\n        this.setState({ showOtp: false });\n      });\n  }\n  submitHandler = (event, values) => {\n    event.preventDefault();\n    if (values.otp) {\n      let form_data = this.state.formValues;\n      form_data[\"otp\"] = values.otp;\n      this.props.registerUser(form_data, this.props.history);\n    } else {\n      this.setState({\n        formValues: values,\n      });\n      values[\"create\"] = true;\n      this.sendOTP(values);\n    }\n  };\n  switchAuthModeHandler = () => {\n    this.setState((prevState) => {\n      return { isSignup: !prevState.isSignup };\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"position-relative\">\n          <Particles\n            id=\"particles-js\"\n            params={{\n              particles: {\n                number: {\n                  value: 160,\n                  density: {\n                    enable: true,\n                    value_area: 800,\n                  },\n                },\n                color: {\n                  value: \"#1360ef\",\n                },\n                shape: {\n                  type: \"circle\",\n                  stroke: {\n                    width: 0,\n                    color: \"#f94f15\",\n                  },\n                  polygon: {\n                    nb_sides: 5,\n                  },\n                  image: {\n                    src: \"img/github.svg\",\n                    width: 100,\n                    height: 100,\n                  },\n                },\n                opacity: {\n                  value: 1,\n                  random: true,\n                  anim: {\n                    enable: true,\n                    speed: 1,\n                    opacity_min: 0,\n                    sync: false,\n                  },\n                },\n                size: {\n                  value: 3,\n                  random: true,\n                  anim: {\n                    enable: false,\n                    speed: 4,\n                    size_min: 0.3,\n                    sync: false,\n                  },\n                },\n                line_linked: {\n                  enable: false,\n                  distance: 150,\n                  color: \"#ffffff\",\n                  opacity: 0.4,\n                  width: 1,\n                },\n                move: {\n                  enable: true,\n                  speed: 1,\n                  direction: \"none\",\n                  random: true,\n                  straight: false,\n                  out_mode: \"out\",\n                  bounce: false,\n                  attract: {\n                    enable: false,\n                    rotateX: 600,\n                    rotateY: 600,\n                  },\n                },\n              },\n              interactivity: {\n                detect_on: \"canvas\",\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"bubble\",\n                  },\n                  onclick: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                  resize: true,\n                },\n                modes: {\n                  grab: {\n                    distance: 400,\n                    line_linked: {\n                      opacity: 1,\n                    },\n                  },\n                  bubble: {\n                    distance: 250,\n                    size: 0,\n                    duration: 2,\n                    opacity: 0,\n                    speed: 3,\n                  },\n                  repulse: {\n                    distance: 400,\n                    duration: 0.4,\n                  },\n                  push: {\n                    particles_nb: 4,\n                  },\n                  remove: {\n                    particles_nb: 2,\n                  },\n                },\n              },\n              retina_detect: true,\n            }}\n          />\n          <div className=\"container\">\n            <div className=\"row  text-center\">\n              <div className=\"col\">\n                <h1>Sign Up</h1>\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"page-content\">\n          <section className=\"register\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center text-center\">\n                <div className=\"col-lg-8 col-md-12\">\n                  <div className=\"mb-6\">\n                    {\" \"}\n                    <span className=\"badge badge-primary-soft p-2\">\n                      <i className=\"la la-exclamation ic-3x rotation\"></i>\n                    </span>\n                    <h2 className=\"mt-3\">Welcome To MyMedbook</h2>\n                    <p className=\"lead\">Enter your details to sign up.</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-md-10 ms-auto me-auto\">\n                  <div className=\"register-form text-center\">\n                    {this.props.registerError && (\n                      <Alert\n                        color=\"danger\"\n                        isOpen={this.props.registerError ? true : false}\n                      >\n                        <div>Please enter valid otp</div>\n                      </Alert>\n                    )}\n                    <AvForm\n                      onValidSubmit={this.submitHandler}\n                      model={this.state.formValues}\n                    >\n                      {!this.state.showOtp && (\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <AvInput\n                                type=\"text\"\n                                name=\"first_name\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <AvInput\n                                type=\"email\"\n                                autoComplete=\"off\"\n                                name=\"email\"\n                                onChange={this.inputChangedHandler.bind(\n                                  this,\n                                  \"email\"\n                                )}\n                                className=\"form-control\"\n                                validate={{ email: true }}\n                                placeholder=\"Email\"\n                                required\n                              />\n                            </div>\n                            {this.state.emailExist && (\n                              <p className=\"text-danger\">Email already exist</p>\n                            )}\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <AvInput\n                                type=\"number\"\n                                name=\"mobile\"\n                                autoComplete=\"off\"\n                                onChange={this.inputChangedHandler.bind(\n                                  this,\n                                  \"mobile\"\n                                )}\n                                className=\"form-control\"\n                                validate={{ pattern: { value: /^\\d{10}$/ } }}\n                                placeholder=\"Mobile\"\n                                required\n                              />\n                              <FormFeedback>\n                                {10 -\n                                  (this.state.mobile\n                                    ? this.state.mobile.length\n                                    : 0)}{\" \"}\n                                chars left\n                              </FormFeedback>\n                            </div>\n\n                            {this.state.mobileExist && (\n                              <p className=\"text-danger\">\n                                Mobile already exist\n                              </p>\n                            )}\n\n                            {this.state.invalidMobile && (\n                              <p className=\"text-danger\">\n                                Invalid Value for Mobile No.\n                              </p>\n                            )}\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                              <AvInput\n                                type=\"password\"\n                                minLength=\"8\"\n                                name=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                required\n                                onChange={(e) => {\n                                  this.setState({\n                                    formValues: {\n                                      ...this.state.formValues,\n                                      password: e.target.value,\n                                    },\n                                  });\n                                }}\n                              />\n                              <FormFeedback>\n                                {8 -\n                                  (this.state.formValues.password\n                                    ? this.state.formValues.password.length\n                                    : 0)}{\" \"}\n                                chars left\n                              </FormFeedback>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                      {this.state.showOtp && (\n                        <div className=\"row\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group\">\n                              <AvInput\n                                type=\"number\"\n                                name=\"otp\"\n                                className=\"form-control\"\n                                placeholder=\"Please enter otp\"\n                                required\n                              />\n                            </div>\n                            <div className=\"form-text mb-2\">\n                              Please enter the otp that you received your\n                              registered Mobile\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <input\n                            type=\"submit\"\n                            // disabled={\n                            //   this.state.mobileExist || this.state.emailExist\n                            // }\n                            value={\n                              this.state.showOtp\n                                ? \"Verify OTP\"\n                                : \"Create Account\"\n                            }\n                            className=\"btn btn-primary\"\n                          />\n                          <span className=\"mt-4 d-block\">\n                            Have An Account ?{\" \"}\n                            <NavLink to=\"/login\">\n                              <i>Sign In!</i>{\" \"}\n                            </NavLink>\n                          </span>\n                        </div>\n                      </div>\n                    </AvForm>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { user, loading, registerError } = state.Auth;\n  return { user, loading, registerError };\n};\nexport default connect(mapStateToProps, { registerUser })(Register);\n","import React from 'react';\n\nconst Input = (props) => {\n    let inputElement = null;\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={props.elementClassName}\n                    value={props.value}\n                    onChange={props.changed}>\n                    <option value={false}>{props.elementConfig.filterLabel}</option>\n                    {props.elementConfig.options.map((option) => (\n                        <option key={option.id} value={option.id}>\n                            {option[props.elementConfig.optionKey]}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={props.elementClassName}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={props.className}>\n            {props.label && <label className={props.labelClassName}>{props.label}</label>}\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default Input;","\nexport const updateObject = (oldObject: any, updatedProperties: any) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value:any, rules:any) => {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}\n","import React from 'react';\n\nconst button = (props:any) => (\n    <button type=\"submit\"\n        disabled={props.disabled}\n        className={props.className}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;"],"sourceRoot":""}