{"version":3,"sources":["components/reset-password.js"],"names":["ResetPassword","props","notify","message","toast","submitHandler","event","values","preventDefault","otp","state","mobile","verifyOTP","password","user_id","setNewPassword","setState","formValues","sendOTP","switchAuthModeHandler","prevState","isSignup","first_name","email","emailExist","data","postCall","BASE_URL","then","r","res","showOtp","errorMessage","catch","er","showPassword","history","push","Fragment","className","id","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","this","isOpen","onValidSubmit","model","name","placeholder","required","to","Component","connect","Auth","user","loading","registerError"],"mappings":"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","file":"static/js/20.b9583cc4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../assets/scss/login.scss\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport { Alert } from \"reactstrap\";\nimport { postCall } from \"../helpers/axiosUtils\";\nimport { BASE_URL } from \"../helpers/constants\";\nimport Particles from \"react-tsparticles\";\n\nimport { toast } from \"react-toastify\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        first_name: \"\",\n        email: \"\",\n        mobile: \"\",\n        password: \"\",\n        otp: \"\",\n      },\n      emailExist: false,\n    };\n  }\n  notify = (message) => toast(message);\n\n  sendOTP(data) {\n    postCall(BASE_URL + `api/common/reset-password-otp/`, data)\n      .then((r) => {\n        let res = r.data;\n        this.setState({\n          showOtp: true,\n          user_id: res.user_id,\n          mobile: data[\"mobile\"],\n          errorMessage: null,\n        });\n        this.notify(\"OTP sent to your mobile number\");\n      })\n      .catch((er) => {\n        this.setState({ errorMessage: \"Please enter valid mobile/email\" });\n      });\n  }\n  verifyOTP(data) {\n    postCall(BASE_URL + `api/common/verify-reset-password-otp/`, data)\n      .then((r) => {\n        this.setState({ showPassword: true, errorMessage: null });\n      })\n      .catch((er) => {\n        this.setState({ errorMessage: \"Please enter valid otp\" });\n      });\n  }\n  setNewPassword(data) {\n    postCall(BASE_URL + `api/common/set-new-password/`, data)\n      .then((r) => {\n        this.notify(\"New Password updated!\");\n        this.props.history.push(`/login`);\n      })\n      .catch((er) => {\n        this.setState({ errorMessage: \"Failed to set password\" });\n      });\n  }\n  submitHandler = (event, values) => {\n    event.preventDefault();\n    if (values.otp) {\n      values[\"mobile\"] = this.state.mobile;\n      this.verifyOTP(values);\n    } else if (values.password) {\n      values[\"user_id\"] = this.state.user_id;\n      this.setNewPassword(values);\n    } else {\n      this.setState({\n        formValues: values,\n      });\n      this.sendOTP(values);\n    }\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState((prevState) => {\n      return { isSignup: !prevState.isSignup };\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"position-relative\">\n          <Particles\n            id=\"particles-js\"\n            params={{\n              particles: {\n                number: {\n                  value: 160,\n                  density: {\n                    enable: true,\n                    value_area: 800,\n                  },\n                },\n                color: {\n                  value: \"#1360ef\",\n                },\n                shape: {\n                  type: \"circle\",\n                  stroke: {\n                    width: 0,\n                    color: \"#f94f15\",\n                  },\n                  polygon: {\n                    nb_sides: 5,\n                  },\n                  image: {\n                    src: \"img/github.svg\",\n                    width: 100,\n                    height: 100,\n                  },\n                },\n                opacity: {\n                  value: 1,\n                  random: true,\n                  anim: {\n                    enable: true,\n                    speed: 1,\n                    opacity_min: 0,\n                    sync: false,\n                  },\n                },\n                size: {\n                  value: 3,\n                  random: true,\n                  anim: {\n                    enable: false,\n                    speed: 4,\n                    size_min: 0.3,\n                    sync: false,\n                  },\n                },\n                line_linked: {\n                  enable: false,\n                  distance: 150,\n                  color: \"#ffffff\",\n                  opacity: 0.4,\n                  width: 1,\n                },\n                move: {\n                  enable: true,\n                  speed: 1,\n                  direction: \"none\",\n                  random: true,\n                  straight: false,\n                  out_mode: \"out\",\n                  bounce: false,\n                  attract: {\n                    enable: false,\n                    rotateX: 600,\n                    rotateY: 600,\n                  },\n                },\n              },\n              interactivity: {\n                detect_on: \"canvas\",\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"bubble\",\n                  },\n                  onclick: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                  resize: true,\n                },\n                modes: {\n                  grab: {\n                    distance: 400,\n                    line_linked: {\n                      opacity: 1,\n                    },\n                  },\n                  bubble: {\n                    distance: 250,\n                    size: 0,\n                    duration: 2,\n                    opacity: 0,\n                    speed: 3,\n                  },\n                  repulse: {\n                    distance: 400,\n                    duration: 0.4,\n                  },\n                  push: {\n                    particles_nb: 4,\n                  },\n                  remove: {\n                    particles_nb: 2,\n                  },\n                },\n              },\n              retina_detect: true,\n            }}\n          />\n          <div className=\"container\">\n            <div className=\"row  text-center\">\n              <div className=\"col\">\n                <h1>Forgot Password</h1>\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"page-content\">\n          <section className=\"register\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center text-center\">\n                <div className=\"col-5\">\n                  <div>\n                    <h2>Forgot your password?</h2>\n                    <p>Enter your email/mobile to reset your password.</p>\n                  </div>\n                  {this.state.errorMessage && (\n                    <Alert\n                      color=\"danger\"\n                      isOpen={this.state.errorMessage ? true : false}\n                    >\n                      <div>{this.state.errorMessage}</div>\n                    </Alert>\n                  )}\n                  <AvForm\n                    onValidSubmit={this.submitHandler}\n                    model={this.state.formValues}\n                  >\n                    {!this.state.showOtp && (\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"form-group\">\n                            <AvInput\n                              type=\"text\"\n                              name=\"mobile\"\n                              className=\"form-control\"\n                              placeholder=\"Please enter email/mobile\"\n                              required\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    {this.state.showPassword && (\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group\">\n                          <AvInput\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            required\n                          />\n                        </div>\n                      </div>\n                    )}\n                    {this.state.showOtp && !this.state.showPassword && (\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"form-group\">\n                            <AvInput\n                              type=\"number\"\n                              name=\"otp\"\n                              className=\"form-control\"\n                              placeholder=\"Please enter otp\"\n                              required\n                            />\n                          </div>\n                          <div className=\"form-text mb-2\">\n                            Please enter the otp that you received your\n                            registered Mobile\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <input\n                          type=\"submit\"\n                          value={\n                            this.state.showPassword\n                              ? \"Set New Password\"\n                              : this.state.showOtp\n                              ? \"Verify OTP\"\n                              : \"Send OTP\"\n                          }\n                          className=\"btn btn-primary\"\n                        />\n                        <span className=\"mt-4 d-block\">\n                          Have An Account ?{\" \"}\n                          <NavLink to=\"/login\">\n                            <i>Sign In!</i>{\" \"}\n                          </NavLink>\n                        </span>\n                      </div>\n                    </div>\n                  </AvForm>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { user, loading, registerError } = state.Auth;\n  return { user, loading, registerError };\n};\nexport default connect(mapStateToProps)(ResetPassword);\n"],"sourceRoot":""}